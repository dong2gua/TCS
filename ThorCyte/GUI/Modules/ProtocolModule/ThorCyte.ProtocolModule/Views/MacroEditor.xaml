<UserControl x:Name="userControl" x:Class="ThorCyte.ProtocolModule.Views.MacroEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:ThorCyte.ProtocolModule.Models"
             xmlns:control="clr-namespace:ThorCyte.ProtocolModule.Controls"
             xmlns:modulesBase="clr-namespace:ThorCyte.ProtocolModule.ViewModels.Modules"
             xmlns:converts="clr-namespace:ThorCyte.ProtocolModule.Converts"
             xmlns:views="clr-namespace:ThorCyte.ProtocolModule.Views"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converts:BoolReverseConverter x:Key="BoolReverseCvt"/>
            <converts:BoolToVisibilityConverter x:Key="BoolVisibleCvt"/>
            <converts:PointConverter x:Key="PtCvt"/>

            <Style TargetType="{x:Type control:Arrow}">
                <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type control:Arrow}">
                            <Canvas Opacity="0.5">
                                <Line x:Name="line" X1="{TemplateBinding Start, Converter={StaticResource PtCvt}, ConverterParameter=X}"
                                      Y1="{TemplateBinding Start, Converter={StaticResource PtCvt}, ConverterParameter=Y}"
                                      X2="{TemplateBinding End, Converter={StaticResource PtCvt}, ConverterParameter=X}"
                                      Y2="{TemplateBinding End, Converter={StaticResource PtCvt}, ConverterParameter=Y}"
                                      Stroke="{TemplateBinding ConBrush}" StrokeThickness="2"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="line" Property="StrokeDashArray" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="line" Property="StrokeDashArray" Value=""/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate DataType="{x:Type models:ConnectorModel}">
                <control:Arrow Start="{Binding SourcePortHotspot}" 
                               End="{Binding DestPortHotspot}" 
                               ConBrush="{Binding ConnectionBrush}" 
                               IsSelected="{Binding IsSelected, Mode=TwoWay}"/>
            </DataTemplate>



            <Style TargetType="{x:Type control:Port}" >
                <Setter Property="Hotspot" Value="{Binding HotSpot, Mode=OneWayToSource}"/>
                <Setter Property="Cursor" Value="Cross"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type control:Port}">
                            <Rectangle x:Name="port" Stroke="{TemplateBinding Background}" Fill="{TemplateBinding Background}" Width="10" Height="10" RadiusX="1" RadiusY="1" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="Background" Value="LightGray">
                                    <Setter TargetName="port" Property="Stroke" Value="LightGray"/>
                                    <Setter TargetName="port" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type control:Module}">
                <Setter Property="X" Value="{Binding X, Mode=TwoWay}"/>
                <Setter Property="Y" Value="{Binding Y, Mode=TwoWay}"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            </Style>

            <DataTemplate DataType="{x:Type modulesBase:ModuleBase}" >
                <Border Width="140" MinHeight="70" CornerRadius="3">
                    <Border.Background>
                        <SolidColorBrush Color="LightGray"/>
                    </Border.Background>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <control:Port DataContext="{Binding InputPorts[0]}" HorizontalAlignment="Center" VerticalAlignment="Top" Background="{Binding PortBrush}" PortType="{Binding PortType}"/>
                        <control:Port DataContext="{Binding InputPorts[1]}" Grid.Column="1" VerticalAlignment="Top" Background="{Binding PortBrush}" PortType="{Binding PortType}"/>
                        <control:Port DataContext="{Binding InputPorts[2]}" Grid.Column="2" VerticalAlignment="Top" Background="{Binding PortBrush}" PortType="{Binding PortType}"/>
                        <control:Port DataContext="{Binding InputPorts[3]}" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left"  Background="{Binding PortBrush}" PortType="{Binding PortType}"/>
                        <control:Port DataContext="{Binding InputPorts[4]}" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Background="{Binding PortBrush}" PortType="{Binding PortType}"/>
                        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding DisplayName}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding CaptionString}" ToolTip="{Binding CaptionString}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" TextWrapping="Wrap" FontStyle="Italic" Foreground="DarkBlue"/>
                        <control:Port DataContext="{Binding OutputPort}" Grid.Row="3" VerticalAlignment="Bottom" Background="{Binding PortBrush}" PortType="{Binding PortType}"/>
                    </Grid>
                </Border>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}"/>
        <KeyBinding Key="W" Command="{Binding MoveCommand}" CommandParameter="Up"/>
        <KeyBinding Key="S" Command="{Binding MoveCommand}" CommandParameter="Down"/>
        <KeyBinding Key="A" Command="{Binding MoveCommand}" CommandParameter="Left"/>
        <KeyBinding Key="D" Command="{Binding MoveCommand}" CommandParameter="Right"/>
        <KeyBinding Gesture="CTRL+A" Command="{Binding SelectAllCommand}"/>
        <KeyBinding Gesture="CTRL+C" Command="{Binding CopyModulesCommnad}"/>
        <KeyBinding Gesture="CTRL+V" Command="{Binding PasteModulesCommnad}"/>
    </UserControl.InputBindings>
    <Grid x:Name="gridMain">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="Auto" MinWidth="260"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!--Protocol TreeView-->
        <Border x:Name="treePannel" Grid.Row="1" Grid.Column="0" BorderBrush="DarkGray" BorderThickness="1">
            <views:ModuleTree/>
        </Border>

        <GridSplitter x:Name="splitter1" Grid.Column="1" Grid.Row="1" Width="2" HorizontalAlignment="Center" Background="DimGray"/>

        <!--Canvas: Create Module-->
        <Border x:Name="PannelBorder" Grid.Column="2" Grid.Row="1" VerticalAlignment="Top" BorderThickness="1" BorderBrush="DarkGray" IsEnabled="{Binding IsRuning, Converter={StaticResource BoolReverseCvt}}">
            <ScrollViewer x:Name="Scroll" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Height="{Binding ElementName=PannelBorder,Path=ActualHeight}" Width="{Binding ElementName=PannelBorder,Path=ActualWidth}">
                <control:PannelView x:Name="pannel" Background="DimGray" PreviewKeyDown="PannelKeyDown" 
                            ModuleSource="{Binding PannelVm.Modules}" ConnectionsSource="{Binding PannelVm.Connections}"
                            ConnectionDragStarted="networkControl_ConnectionDragStarted" ConnectionDragging="networkControl_ConnectionDragging"
                            ConnectionDragCompleted="networkControl_ConnectionDragCompleted" MouseLeftButtonDown="OnMouseLeftDown">
                    <control:PannelView.ContextMenu>
                        <ContextMenu x:Name="testMenu">
                            <MenuItem Header="Copy" Command="{Binding CopyModulesCommnad}" IsEnabled="{Binding IsRemoveEnable}"/>
                            <MenuItem Header="Paste here" Command="{Binding PasteModulesCommnad}"  CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" IsEnabled="{Binding IsPasteEnable}"/>
                            <MenuItem Header="Remove" Command="{Binding DeleteCommand}" IsEnabled="{Binding IsRemoveEnable}"/>
                            <Separator/>
                            <MenuItem Header="Vertical Align" Command="{Binding AlignCommnad}" CommandParameter="V" IsEnabled="{Binding IsAlignEnable}"/>
                            <MenuItem Header="Horizontal Align" Command="{Binding AlignCommnad}" CommandParameter="H" IsEnabled="{Binding IsAlignEnable}"/>
                        </ContextMenu>
                    </control:PannelView.ContextMenu>
                </control:PannelView>
            </ScrollViewer>
        </Border>

        <GridSplitter x:Name="splitter2" Grid.Column="3" Grid.Row="1" Width="2" HorizontalAlignment="Center" Background="DimGray"/>

        <StackPanel x:Name="collapseToolPanel" Grid.Column="4" Grid.Row="0" Orientation="Horizontal"  HorizontalAlignment="Left" Height="30">

        </StackPanel>

        <Border x:Name="contentGrid" Grid.Column="4" Grid.Row="1" BorderThickness="1" BorderBrush="DarkGray">
            <ScrollViewer x:Name="Scroller" VerticalAlignment="Top" Height="{Binding ElementName=contentGrid,Path=ActualHeight}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <StackPanel>
                    <Label Content="{Binding PannelVm.SelectedModuleViewModel.DisplayName}" HorizontalAlignment="Center" FontWeight="Bold" Margin="5" FontSize="15" />
                    <ContentControl  x:Name="contentControl" DataContext="{Binding PannelVm.SelectedModuleViewModel}" Content="{Binding View}" VerticalAlignment="Top" Margin="5,0"/>
                </StackPanel>
            </ScrollViewer>
        </Border>


        <Border Margin="2,0,0,2" Grid.Row="1" Grid.Column="5" Background="#333333" CornerRadius="2" BorderThickness="1" BorderBrush="#222222">
            <StackPanel Margin="1,3" Orientation="Vertical" >
                <ToggleButton Margin="1"  Click="ToolboxClick" ToolTip="Tool Box" IsEnabled="{Binding IsAlignEnable}">
                    <Image Source="../Resource/Images/toolbox.png"/>
                </ToggleButton>

                <Separator/>

                <Button  Margin="1" Command="{Binding CopyModulesCommnad}" ToolTip="Copy seleted modules" IsEnabled="{Binding IsRemoveEnable}">
                    <Image Source="../Resource/Images/copy.png"/>
                </Button>
                <Button  Margin="1" Command="{Binding PasteModulesCommnad}" ToolTip="Paste seleted modules" IsEnabled="{Binding IsPasteEnable}">
                    <Image Source="../Resource/Images/paste.png"/>
                </Button>
                <Button  Margin="1" Command="{Binding DeleteCommand}" ToolTip="Delete seleted modules" IsEnabled="{Binding IsRemoveEnable}">
                    <Image Source="../Resource/Images/delete.png"/>
                </Button>

                <Button  Margin="1" Command="{Binding AlignCommnad}" CommandParameter="V" ToolTip="Vertical Align" IsEnabled="{Binding IsAlignEnable}">
                    <Image Source="../Resource/Images/Vertical align Top.png"/>
                </Button>
                <Button  Margin="1" Command="{Binding AlignCommnad}" CommandParameter="H" ToolTip="Horizontal Align" IsEnabled="{Binding IsAlignEnable}">
                    <Image Source="../Resource/Images/Horizontal Align Left.png"/>
                </Button>

                <Separator/>

                <Button  Margin="1" Command="{Binding MacroCommnad}" ToolTip="{Binding TipStr}">
                    <Image Source="{Binding ImgSource}"/>
                </Button>
            </StackPanel>
        </Border>

        <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="24"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Column="0" Grid.ColumnSpan="3" Text="{Binding StatusMessage}" VerticalAlignment="Bottom" Margin="8,0"/>
            <Grid Grid.Column="4" Margin="0,5,10,5" Visibility="{Binding IsRuning, Converter={StaticResource BoolVisibleCvt}}" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ProgressBar Grid.Row="0" Minimum="0" Maximum="{Binding TileCount}" Value="{Binding RegionProgress}" BorderBrush="DarkGray" BorderThickness="1"/>
                <ProgressBar Grid.Row="1" Minimum="0" Maximum="{Binding RegionCount}" Value="{Binding TotalProgress}" BorderBrush="DarkGray" BorderThickness="1"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
