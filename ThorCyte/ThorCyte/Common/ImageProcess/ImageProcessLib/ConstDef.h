#pragma once
#include "stdafx.h"
const Ipp16u ElementSize = sizeof(Ipp16u);
// filter type enum
enum FilterType
{
	HiGauss = 0,
	HiPass,
	LowPass,
	HorizontalEdge,
	VerticalEdge,
	Laplace,
	Fish,
	FishB,
	FishC
};

// filter kernels array
const Ipp32s HiGauss5Kernel[] = { 0, -1, -1, -1,  0,
								 -1,  0,  2,  0, -1,
								 -1,  2,  5,  2, -1,
								 -1,  0,  2,  0, -1,
								  0, -1, -1, -1,  0};

const Ipp32s HiGauss7Kernel[] ={ 0,  0, -1, -1, -1,  0,  0,
								 0, -1, -1,  0, -1, -1,  0,
								-1, -1,  2,  4,  2, -1, -1,
								-1,  0,  4, 10,  4,  0, -1,
								-1, -1,  2,  4,  2, -1, -1,
 								 0, -1, -1,  0, -1, -1,  0,
   								 0,  0, -1, -1, -1,  0,  0};

const Ipp32s HiGauss9Kernel[] = {-1,  0, -1, -3, -4, -3, -1,  0, -1,
   								  0, -2, -7, -8, -7, -8, -7, -2,  0,
   								 -1, -7, -5,  3,  7,  3, -5, -7, -1,
   								 -3, -8,  3, 19, 27, 19,  3, -8, -3,
   								 -4, -7,  7, 27, 42, 27,  7, -7, -4,
   								 -3, -8,  3, 19, 27, 19,  3, -8, -3,
   								 -1, -7, -5,  3,  7,  3, -5, -7, -1,
   								  0, -2, -7, -8, -7, -8, -7, -2,  0,
  								 -1,  0, -1, -3, -4, -3, -1,  0, -1};

const Ipp32s HiPass3Kernel[] = {-1, -1, -1,
   								-1,  9, -1,
   								-1, -1, -1};

const Ipp32s HiPass5Kernel[] = { 0, -1, -1, -1,  0,
   								-1, -1, -1, -1, -1,
   								-1, -1, 21, -1, -1,
   								-1, -1, -1, -1, -1,
   								 0, -1, -1, -1,  0};

const Ipp32s HiPass7Kernel[] = { 0,  0, -1, -1, -1,  0,  0,
   								 0, -1, -1, -1, -1, -1,  0,
   								-1, -1, -1, -1, -1, -1, -1,
   								-1, -1, -1, 37, -1, -1, -1,
  								-1, -1, -1, -1, -1, -1, -1,
   								 0, -1, -1, -1, -1, -1,  0,
   								 0,  0, -1, -1, -1,  0,  0};


const Ipp32s HorizontalEdge3Kernel[] = { 1,  2,  1,
   										 0,  0,  0,
   										 -1,  -2,  -1};

const Ipp32s HorizontalEdge5Kernel[] = { 1,  1,  1,  1,  1,
   										 1,  1,  1,  1,  1,
   										 0,  0,  0,  0,  0,
   										-1, -1, -1, -1, -1,
   										 -1, -1, -1, -1, -1};

const Ipp32s HorizontalEdge7Kernel[] = {1, 1, 1, 1, 1, 1, 1,
   										1, 1, 1, 1, 1, 1, 1,
   										1, 1, 1, 1, 1, 1, 1,
   										 0,  0,  0,  0,  0,  0,  0,
   										 -1, -1, -1, -1, -1, -1, -1,
   										 -1, -1, -1, -1, -1, -1, -1,
   										 -1, -1, -1, -1, -1, -1, -1};

const Ipp32s Laplace3Kernel[] = {-1, -1, -1,
   								 -1,  8, -1,
   								 -1, -1, -1};

const Ipp32s Laplace5Kernel[] = { 0, -1, -1, -1,  0,
   								 -1,  0,  1,  0, -1,
   								 -1,  1,  8,  1, -1,
   								 -1,  0,  1,  0, -1,
   								  0, -1, -1, -1,  0};

const Ipp32s Laplace7Kernel[] = {-1, -1, -1, -1, -1, -1, -1,
   								 -1, -1, -1, -1, -1, -1, -1,
   								 -1, -1, -1, -1, -1, -1, -1,
   								 -1, -1, -1, 48, -1, -1, -1,
  								 -1, -1, -1, -1, -1, -1, -1,
   								 -1, -1, -1, -1, -1, -1, -1,
   								 -1, -1, -1, -1, -1, -1, -1};

const Ipp32s LowPass3Kernel[] = { 1,  1,  1,
   								  1,  1,  1,
   								  1,  1,  1};

const Ipp32s LowPass5Kernel[] = { 1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1};

const Ipp32s LowPass7Kernel[] = { 1,  1,  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,  1,  1,
   								  1,  1,  1,  1,  1,  1,  1};

const Ipp32s VerticalEdge3Kernel[] = {1,  0,  -1,
   									  2,  0,  -2,
   									  1,  0,  -1};

const Ipp32s VerticalEdge5Kernel[] = {1, 1,  0,  -1,  -1,
   									  1, 1,  0,  -1,  -1,
   									  1, 1,  0,  -1,  -1,
   									  1, 1,  0,  -1,  -1,
   									  1, 1,  0,  -1,  -1};

const Ipp32s VerticalEdge7Kernel[] = {	1, 1, 1,  0,  -1,  -1,  -1,
   										1, 1, 1,  0,  -1,  -1,  -1,
   										1, 1, 1,  0,  -1,  -1,  -1,
   										1, 1, 1,  0,  -1,  -1,  -1,
   										1, 1, 1,  0,  -1,  -1,  -1,
   										1, 1, 1,  0,  -1,  -1,  -1,
   										1, 1, 1,  0,  -1,  -1,  -1};

const Ipp32s Fish11Kernel[] = { -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,
   								-3,  0,  0,  0,  0,  0,  0,  0,  0,  0, -3,
   								-3,  0,  1,  1,  1,  1,  1,  1,  1,  0, -3,
   								-3,  0,  1,  3,  3,  3,  3,  3,  1,  0, -3,
   								-3,  0,  1,  3,  5,  5,  5,  3,  1,  0, -3,
   								-3,  0,  1,  3,  5,  6,  5,  3,  1,  0, -3,
   								-3,  0,  1,  3,  5,  5,  5,  3,  1,  0, -3,
   								-3,  0,  1,  3,  3,  3,  3,  3,  1,  0, -3,
   								-3,  0,  1,  1,  1,  1,  1,  1,  1,  0, -3,
   								-3,  0,  0,  0,  0,  0,  0,  0,  0,  0, -3,
   								-3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3};

const Ipp32s FishB11Kernel[] = { 1,  0,	 0, -1,	-1, -1,	-1, -1,	 0,  0,	 1,
								 0, -1,	-1, -1,	-1, -1,	-1, -1,	-1, -1,	 0,
								 0, -1,	-1, -1,	 0,  0,	 0, -1,	-1, -1,	 0,
								-1, -1,	-1,  1,	 2,  3,	 2,  1,	-1, -1,	-1,
								-1, -1,	 0,  2,	 4,  5,	 4,  2,	 0, -1,	-1,
								-1, -1,	 0,  3,	 5,  6,	 5,  3,	 0, -1,	-1,
								-1, -1,	 0,  2,	 4,  5,	 4,  2,	 0, -1,	-1,
								-1, -1,	-1,  1,	 2,  3,	 2,  1,	-1, -1,	-1,
								 0, -1,	-1, -1,	 0,  0,	 0, -1,	-1, -1,	 0,
								 0, -1,	-1, -1,	-1, -1,	-1, -1,	-1, -1,	 0,
								 1,  0,	 0, -1,	-1, -1,	-1, -1,	 0,  0,	 1};

const Ipp32s FishC11Kernel[] = { 0,  0,  0, -1, -1, -1, -1, -1,  0,  0,  0,
								 0, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,
								 0, -1, -1, -1,  0,  0,  0, -1, -1, -1,  0,
								-1, -1, -1,  0,  2,  2,  2,  0, -1, -1, -1,
								-1, -1,  0,  2,  3,  4,  3,  2,  0, -1, -1,
								-1, -1,  0,  2,  4,  6,  4,  2,  0, -1, -1,
								-1, -1,  0,  2,  3,  4,  3,  2,  0, -1, -1,
								-1, -1, -1,  0,  2,  2,  2,  0, -1, -1, -1,
								 0, -1, -1, -1,  0,  0,  0, -1, -1, -1,  0,
								 0, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,
								 0,  0,  0, -1, -1, -1, -1, -1,  0,  0,  0};
